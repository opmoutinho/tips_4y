import Inputs from '\\..\\resources\\inputs.json';

const email = Inputs.user.email;
const password = Inputs.user.pass;
const account1 = Inputs.accounts.accountBasic;
const movement1 = Inputs.movements.movementRecPago
const movement2 = Inputs.movements.movementRecPend
const movement3 = Inputs.movements.movementDesPago
const movement4 = Inputs.movements.movementDesPend

describe('Account - Behaviour Operations', () => {
    before(() => {
        cy.visit('https://seubarriga.wcaquino.me/login')
        cy.get('input[id="email"]')
            .type(email)
        cy.get('input[id="senha"]')
            .type(password)
        cy.get('button[type="submit"]')
            .click()
        cy.contains('a[data-toggle="dropdown"]', 'Contas')
            .click()
        cy.contains('a[href="/addConta"]', 'Adicionar')
            .click()
        cy.get('input[id="nome"]')
            .type(account1)
        cy.get('button[type="submit"]')
            .click()
    })

    beforeEach(() => {
        cy.visit('https://seubarriga.wcaquino.me/login')
        cy.get('input[id="email"]')
            .type(email)
        cy.get('input[id="senha"]')
            .type(password)
        cy.get('button[type="submit"]')
            .click()
    })

    it('Tries to create a paid revenue', () => {
        cy.contains('a[href="/movimentacao"]', 'Criar Movimentação')
            .click()
        cy.get('select[id="tipo"]')
            .select(movement1.movementType)
        cy.get('input[id="data_transacao"]')
            .type(movement1.movementDate)
        cy.get('input[id="data_pagamento"]')
            .type(movement1.payDay)
        cy.get('input[id="descricao"]')
            .type(movement1.description)
        cy.get('input[id="interessado"]')
            .type(movement1.interested)
        cy.get('input[id="valor"]')
            .type(movement1.value)
        cy.get('select[id="conta"]')
            .select(account1)
        cy.get(`input[id="status_${movement1.status}"]`)
            .click()
        cy.get('button[type="submit"]')
            .click()
        cy.get('div[class="alert alert-success"]')
        .should('have.text', 'Movimentação adicionada com sucesso!')
    })

    it('Tries to create an unpaid revenue', () => {
        cy.contains('a[href="/movimentacao"]', 'Criar Movimentação')
            .click()
        cy.get('select[id="tipo"]')
            .select(movement2.movementType)
        cy.get('input[id="data_transacao"]')
            .type(movement2.movementDate)
        cy.get('input[id="data_pagamento"]')
            .type(movement2.payDay)
        cy.get('input[id="descricao"]')
            .type(movement2.description)
        cy.get('input[id="interessado"]')
            .type(movement2.interested)
        cy.get('input[id="valor"]')
            .type(movement2.value)
        cy.get('select[id="conta"]')
            .select(account1)
        cy.get(`input[id="status_${movement2.status}"]`)
            .click()
        cy.get('button[type="submit"]')
            .click()
        cy.get('div[class="alert alert-success"]')
        .should('have.text', 'Movimentação adicionada com sucesso!')
    })

    it('Tries to create a paid expense', () => {
        cy.contains('a[href="/movimentacao"]', 'Criar Movimentação')
            .click()
        cy.get('select[id="tipo"]')
            .select(movement3.movementType)
        cy.get('input[id="data_transacao"]')
            .type(movement3.movementDate)
        cy.get('input[id="data_pagamento"]')
            .type(movement3.payDay)
        cy.get('input[id="descricao"]')
            .type(movement3.description)
        cy.get('input[id="interessado"]')
            .type(movement3.interested)
        cy.get('input[id="valor"]')
            .type(movement3.value)
        cy.get('select[id="conta"]')
            .select(account1)
        cy.get(`input[id="status_${movement3.status}"]`)
            .click()
        cy.get('button[type="submit"]')
            .click()
        cy.get('div[class="alert alert-success"]')
        .should('have.text', 'Movimentação adicionada com sucesso!')
    })

    it('Tries to create an unpaid expense', () => {
        cy.contains('a[href="/movimentacao"]', 'Criar Movimentação')
            .click()
        cy.get('select[id="tipo"]')
            .select(movement4.movementType)
        cy.get('input[id="data_transacao"]')
            .type(movement4.movementDate)
        cy.get('input[id="data_pagamento"]')
            .type(movement4.payDay)
        cy.get('input[id="descricao"]')
            .type(movement4.description)
        cy.get('input[id="interessado"]')
            .type(movement4.interested)
        cy.get('input[id="valor"]')
            .type(movement4.value)
        cy.get('select[id="conta"]')
            .select(account1)
        cy.get(`input[id="status_${movement4.status}"]`)
            .click()
        cy.get('button[type="submit"]')
            .click()
        cy.get('div[class="alert alert-success"]')
        .should('have.text', 'Movimentação adicionada com sucesso!')
    })

    it('Tries to create an expense with no data', () => {
        cy.contains('a[href="/movimentacao"]', 'Criar Movimentação')
            .click()
        cy.get('select[id="tipo"]')
            .select(movement1.movementType)
        cy.get('button[type="submit"]')
            .click()
        cy.get('div[class="alert alert-danger"]')
        cy.contains('Data da Movimentação é obrigatório')
        cy.contains('Data do pagamento é obrigatório')
        cy.contains('Descrição é obrigatório')
        cy.contains('Interessado é obrigatório')
        cy.contains('Valor é obrigatório')
        cy.contains('Valor deve ser um número')
    })

    it('Tries to create an revenue with no data', () => {
        cy.contains('a[href="/movimentacao"]', 'Criar Movimentação')
            .click()
        cy.get('select[id="tipo"]')
            .select(movement3.movementType)
        cy.get('button[type="submit"]')
            .click()
        cy.get('div[class="alert alert-danger"]')
        cy.contains('Data da Movimentação é obrigatório')
        cy.contains('Data do pagamento é obrigatório')
        cy.contains('Descrição é obrigatório')
        cy.contains('Interessado é obrigatório')
        cy.contains('Valor é obrigatório')
        cy.contains('Valor deve ser um número')
    })

    after(() => {
        cy.contains('a[href="/extrato"]', 'Resumo Mensal')
            .click()
        cy.get('select[id="mes"]')
            .select("10")
        cy.get('select[id="ano"]')
            .select("2021")
        cy.get('input[type="submit"]')
            .click()
        cy.get('span[class="glyphicon glyphicon-remove-circle"]')
            .first()
            .click()
        cy.get('span[class="glyphicon glyphicon-remove-circle"]')
            .first()
            .click()
        cy.get('span[class="glyphicon glyphicon-remove-circle"]')
            .first()
            .click()
        cy.get('span[class="glyphicon glyphicon-remove-circle"]')
            .first()
            .click()
        cy.contains('a[data-toggle="dropdown"]', 'Contas')
            .click()
        cy.contains('a[href="/contas"]', 'Listar')
            .click()
        cy.get('span[class="glyphicon glyphicon-remove-circle"]')
            .first()
            .click()
    })
})